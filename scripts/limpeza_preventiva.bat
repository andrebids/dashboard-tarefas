@echo off
echo ========================================
echo    Limpeza Preventiva - Planka
echo    Previne arquivos corrompidos
echo ========================================
echo.

cd /d "%~dp0\..\..\planka-personalizado"

echo üßπ LIMPANDO ARQUIVOS POTENCIALMENTE CORROMPIDOS...
echo.

echo üìÅ Removendo diret√≥rios problem√°ticos...
if exist "server\.venv" (
    echo   ‚Ä¢ Removendo server\.venv...
    rmdir /s /q "server\.venv"
    echo   ‚úÖ server\.venv removido
) else (
    echo   ‚Ä¢ server\.venv n√£o existe
)

if exist "server\node_modules" (
    echo   ‚Ä¢ Removendo server\node_modules...
    rmdir /s /q "server\node_modules"
    echo   ‚úÖ server\node_modules removido
) else (
    echo   ‚Ä¢ server\node_modules n√£o existe
)

if exist "client\node_modules" (
    echo   ‚Ä¢ Removendo client\node_modules...
    rmdir /s /q "client\node_modules"
    echo   ‚úÖ client\node_modules removido
) else (
    echo   ‚Ä¢ client\node_modules n√£o existe
)

echo.
echo üê≥ LIMPANDO CACHE DO DOCKER...
docker system prune -f
docker builder prune -f
echo ‚úÖ Cache do Docker limpo

echo.
echo üîç VERIFICANDO ARQUIVOS PYTHON CORROMPIDOS...
for /r "server" %%f in (*.py) do (
    if %%~zf==0 (
        echo   ‚ö†Ô∏è Arquivo corrompido encontrado: %%f
        del "%%f"
        echo   ‚úÖ Arquivo corrompido removido: %%f
    )
)

echo.
echo ‚úÖ LIMPEZA PREVENTIVA CONCLU√çDA!
echo.
echo üí° DICAS PARA EVITAR ARQUIVOS CORROMPIDOS:
echo   1. N√£o interrompa processos de instala√ß√£o
echo   2. Mantenha espa√ßo livre no disco
echo   3. Execute esta limpeza semanalmente
echo   4. Use apenas um modo por vez (dev OU produ√ß√£o)
echo.
pause 